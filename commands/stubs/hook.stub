<?php

namespace WHMCS\Module\Addon\{{addonName}}\app\Hooks;

use WHMCS\Module\Addon\{{addonName}}\app\Hooks\HooksManager;
use WHMCS\Database\Capsule;

class {{hookName}}Hook
{
    protected $useJob = false;
    protected $redisClient;
    protected $hooksManager;


    public function __construct()
    {
        $this->hooksManager = new HooksManager();
    }

    public function handle(array $params)
    {
        $this->hooksManager->log('{{hookName}} hook executed', 'INFO');

        $jobData = [
            'hook' => '{{hookName}}',
            'params' => json_encode($params),
            'created_at' => date('Y-m-d H:i:s'),
        ];
        if ($this->useJob) {
            if (!$this->saveJob($jobData)) {
                $this->hooksManager->log('Failed to save job to MySQL', 'ERROR');
            }
        }else{
            $this->logic($params);
        }
    }

   
    public function logic(array $params)
    {
        try {
            // if (false) {
            //    throw new \Exception("Error Message");
            // }

        } catch (\Exception $e) {
            $this->hooksManager->log("{{hookName}} logic failed: " . $e->getMessage(), 'ERROR');
            $this->saveFailedJob($params, $e->getMessage());
        }
    }


    protected function saveJob(array $jobData): bool
    {
        try {
            Capsule::table('job_handler_jobs')->insert($jobData);
            return true;
        } catch (\Exception $e) {
            $this->hooksManager->log('MySQL save job failed: ' . $e->getMessage(), 'ERROR');
            return false;
        }
    }

    protected function saveFailedJob(array $jobData, string $errorMessage): bool
    {
        try {
            Capsule::table('job_handler_failed_jobs')->insert([
                'job_key' => $jobData['hook'] . ':' . uniqid(),
                'job_data' => json_encode($jobData),
                'error_message' => $errorMessage,
                'created_at' => date('Y-m-d H:i:s'),
            ]);
            return true;
        } catch (\Exception $e) {
            $this->hooksManager->log('MySQL save failed job failed: ' . $e->getMessage(), 'ERROR');
            return false;
        }
    }
}
